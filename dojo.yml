id: intro-to-cybersecurity
name: Intro to Cybersecurity
description: |
  Can you feel it?
  The sun is beginning to rise on your journey of cybersecurity.
  Armed with the fundamentals, you begin to push ever deeper into the realms of knowledge that previously eluded you.
  Fear not: with perseverance, grit, and gumption, you will lay the groundwork for a towering mastery of security in your future.

type: topic

modules:

- id: talking-web
  name: Talking Web
  description: |
    In the vast expanse of the digital realm, HTTP (Hypertext Transfer Protocol) stands as the lingua franca, the common tongue through which web applications, servers, and clients converse.
    This module, **Talking Web**, delves deep into the intricate dance of crafting, decoding, and manipulating HTTP requests and responses.
    
    Both novice web developers and cybersecurity aficionados will come to realize that to truly grasp the heartbeat of the web, one must not only understand but master the nuances of HTTP communication.
    Mastery, however, is more than just absorbing theory; itâ€™s about rolling up your sleeves and getting hands-on.
    By the end of this journey, you won't be solely reliant on your web browser to make HTTP requests on your behalf. You'll possess the skills to converse directly with web servers, thus opening a new world of versatility and power.
    
    To aid you in this journey, this module arms you with formidable tools: `curl`, `netcat`, and `python requests`, setting the stage for dialogues with web servers, specifically on `localhost` at `port 80`.
    
    As you venture into the detailed intricacies of:
    - **Headers**: Metadata fields that carry vital information about the request or response.
    - **Paths**: The specific locations or resources you're aiming to access.
    - **Arguments**: Data points that can alter or dictate the behavior of your request.
    - **Form Data**: Data transferred from web forms.
    - **JSON**: A popular data interchange format that's lightweight and human-readable.
    - **Cookies**: Small data fragments stored on the user's computer, crucial for session management and tracking.
    - **Redirects**: Methods web services use to direct your browser from one location to another.
    
    As you sail through these challenges, you won't be navigating blind:
    ```sh
    hacker@talking-web-level-1:~$ /challenge/run
     * Serving Flask app 'run'
     * Debug mode: off
    WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
     * Running on http://127.0.0.1:80
    Press CTRL+C to quit
    ```
    
    This real-time feedback loop, made available through `$ /challenge/run`, serves as your personal compass, directing your gaze into the heartbeat of the web server's activities.
    While navigating, take note: the server's responses are not mere acknowledgments. They often whisper hints, nudging you towards the right path when you stumble.
    
    Yet, as with any craft, your tools are only as effective as your knowledge of them.
    Should you ever find yourself at a crossroads, uncertain of how to harness these tools, remember that knowledge is just a click away:
    - For `curl`, should its versatility bewilder you, the [man page for curl](https://linux.die.net/man/1/curl) is a treasure trove of wisdom.
    - If `netcat` seems enigmatic, allow [netcat's documentation](https://linux.die.net/man/1/nc) to shed light on its mysteries.
    - And, when the intricacies of the `python requests` library beckon, dive into its [comprehensive guide](https://requests.readthedocs.io/en/latest/).
    
    To truly initiate this journey, why not start by reaching out to the server in its native tongue? Let's put theory into practice. Go on, and use `curl` to speak with `localhost`.
  challenges:
  - id: level-1
    name: level1
    description: Send an HTTP request using curl
  - id: level-2
    name: level2
    description: Send an HTTP request using nc
  - id: level-3
    name: level3
    description: Send an HTTP request using python
  - id: level-4
    name: level4
    description: Set the host header in an HTTP request using curl
  - id: level-5
    name: level5
    description: Set the host header in an HTTP request using nc
  - id: level-6
    name: level6
    description: Set the host header in an HTTP request using python
  - id: level-7
    name: level7
    description: Set the path in an HTTP request using curl
  - id: level-8
    name: level8
    description: Set the path in an HTTP request using nc
  - id: level-9
    name: level9
    description: Set the path in an HTTP request using python
  - id: level-10
    name: level10
    description: URL encode a path in an HTTP request using curl
  - id: level-11
    name: level11
    description: URL encode a path in an HTTP request using nc
  - id: level-12
    name: level12
    description: URL encode a path in an HTTP request using python
  - id: level-13
    name: level13
    description: Specify an argument in an HTTP request using curl
  - id: level-14
    name: level14
    description: Specify an argument in an HTTP request using nc
  - id: level-15
    name: level15
    description: Specify an argument in an HTTP request using python
  - id: level-16
    name: level16
    description: Specify multiple arguments in an HTTP request using curl
  - id: level-17
    name: level17
    description: Specify multiple arguments in an HTTP request using nc
  - id: level-18
    name: level18
    description: Specify multiple arguments in an HTTP request using python
  - id: level-19
    name: level19
    description: Include form data in an HTTP request using curl
  - id: level-20
    name: level20
    description: Include form data in an HTTP request using nc
  - id: level-21
    name: level21
    description: Include form data in an HTTP request using python
  - id: level-22
    name: level22
    description: Include form data with multiple fields in an HTTP request using curl
  - id: level-23
    name: level23
    description: Include form data with multiple fields in an HTTP request using nc
  - id: level-24
    name: level24
    description: Include form data with multiple fields in an HTTP request using python
  - id: level-25
    name: level25
    description: Include json data in an HTTP request using curl
  - id: level-26
    name: level26
    description: Include json data in an HTTP request using nc
  - id: level-27
    name: level27
    description: Include json data in an HTTP request using python
  - id: level-28
    name: level28
    description: Include complex json data in an HTTP request using curl
  - id: level-29
    name: level29
    description: Include complex json data in an HTTP request using nc
  - id: level-30
    name: level30
    description: Include complex json data in an HTTP request using python
  - id: level-31
    name: level31
    description: Follow an HTTP redirect from HTTP response using curl
  - id: level-32
    name: level32
    description: Follow an HTTP redirect from HTTP response using nc
  - id: level-33
    name: level33
    description: Follow an HTTP redirect from HTTP response using python
  - id: level-34
    name: level34
    description: Include a cookie from HTTP response using curl
  - id: level-35
    name: level35
    description: Include a cookie from HTTP response using nc
  - id: level-36
    name: level36
    description: Include a cookie from HTTP response using python
  - id: level-37
    name: level37
    description: Make multiple requests in response to stateful HTTP responses using curl
  - id: level-38
    name: level38
    description: Make multiple requests in response to stateful HTTP responses using nc
  - id: level-39
    name: level39
    description: Make multiple requests in response to stateful HTTP responses using python
  resources:
  - name: "Talking Web: Introduction"
    type: lecture
    video: UW13N0CV-4s
    playlist: PL-ymxv0nOtqpbL9yW55RfoyUDjwotW9gR
    slides: 1Wdd3z3qSiknvYsETmosSiIFQtnNmeanFeWJz6SMazY8
  - name: "Talking Web: The Internet"
    type: lecture
    video: v64j2WFiJpc
    playlist: PL-ymxv0nOtqpbL9yW55RfoyUDjwotW9gR
    slides: 1HrAXQq6CvxOFfEUhuZTQbqEYOYA-FgLE9pL6ji9BcvI
  - name: "Talking Web: RFC 1945"
    type: lecture
    video: bPaY78xpRhQ
    playlist: PL-ymxv0nOtqpbL9yW55RfoyUDjwotW9gR
    slides: 1VWNFfmzbeVzQ-J887ngynb-1YdLGJEd4ype69MUWtkI
  - name: "Talking Web: URLs and Encoding"
    type: lecture
    video: yM9VM2DSkBU
    playlist: PL-ymxv0nOtqpbL9yW55RfoyUDjwotW9gR
    slides: 1twvI9r1RPZAuka_cABnvwhOnourhbOgu5C1f_NgZx9s
  - name: "Talking Web: State"
    type: lecture
    video: 2TeudjfK-tQ
    playlist: PL-ymxv0nOtqpbL9yW55RfoyUDjwotW9gR
    slides: 1O8ff6AdaTQ1eA8lhUo3GjIbtxicpQnKseIc-TSNW5hE

- id: building-a-web-server
  name: Building a Web Server
  description:  Develop the skills needed to build a web server from scratch, starting with a simple program and progressing to handling multiple HTTP GET and POST requests.
  challenges:
  - id: level-1
    name: level1
    description: Program that exits
  - id: level-2
    name: level2
    description: Program that creates a socket
  - id: level-3
    name: level3
    description: Program that binds a socket
  - id: level-4
    name: level4
    description: Program that listens on a socket
  - id: level-5
    name: level5
    description: Program that accepts a connection
  - id: level-6
    name: level6
    description: Program that statically responds to an HTTP request
  - id: level-7
    name: level7
    description: Program that dynamically responds to an HTTP GET request
  - id: level-8
    name: level8
    description: Program that dynamically responds to multiple HTTP GET requests
  - id: level-9
    name: level9
    description: Multi-processed program that dynamically responds to multiple HTTP GET requests
  - id: level-10
    name: level10
    description: Multi-processed program that dynamically responds to multiple HTTP POST requests
  - id: level-11
    name: level11
    description: Multi-processed program that dynamically responds to multiple HTTP GET and POST requests
  resources:
  - name: "Building a Web Server: Introduction"
    type: lecture
    video: 4S78xEhxh7k
    playlist: PL-ymxv0nOtqqYlFBiJ_gMff9zHfHMNCtG
    slides: 1U33Vcbv2nVoufatHhmIK4XKRzyXZCujR45paGABblnk
  - name: "Building a Web Server: Linux Processes"
    type: lecture
    video: nEJiM1ryJQw
    playlist: PL-ymxv0nOtqqYlFBiJ_gMff9zHfHMNCtG
    slides: 1l0VHGTYtAk2FzWY4c-m5e8yTS1hCnGit2ve7y7BAlyg
  - name: "Building a Web Server: Network System Calls"
    type: lecture
    video: Q1SvbIBCx1E
    playlist: PL-ymxv0nOtqqYlFBiJ_gMff9zHfHMNCtG
    slides: 1MxT1qcwZZHSkaaeYIKKp7Qg0IaespmlrqhZDnWkwxFo
  - name: "Building a Web Server: HTTP"
    type: lecture
    video: 0G0aL8KTeB4
    playlist: PL-ymxv0nOtqqYlFBiJ_gMff9zHfHMNCtG
    slides: 1_-CxrxPUf9D_6tsueggaaOt27pQ-I7hVe4YIMz1PWA8
  - name: "Building a Web Server: Multiprocessing"
    type: lecture
    video: 9jH2Le-MWuI
    playlist: PL-ymxv0nOtqqYlFBiJ_gMff9zHfHMNCtG
    slides: 1tycdciuY8aMmBGj98qUMq0-ubClkqeT10QNIT0hE9kU

- id: intercepting-communication
  name: Intercepting Communication
  description: Learn various techniques to intercept and manipulate network communication, from connecting to remote hosts to performing man-in-the-middle attacks.
  challenges:
  - id: level-1
    name: level1
    description: Connect to a remote host
  - id: level-2
    name: level2
    description: Listen for a connection from a remote host
  - id: level-3
    name: level3
    description: Find and connect to a remote host
  - id: level-4
    name: level4
    description: Find and connect to a remote host on a large network
  - id: level-5
    name: level5
    description: Monitor traffic from a remote host
  - id: level-6
    name: level6
    description: Monitor slow traffic from a remote host
  - id: level-7
    name: level7
    description: Hijack traffic from a remote host by configuring your network interface
  - id: level-8
    name: level8
    description: Manually send an Ethernet packet
  - id: level-9
    name: level9
    description: Manually send an Internet Protocol packet
  - id: level-10
    name: level10
    description: Manually send a Transmission Control Protocol packet
  - id: level-11
    name: level11
    description: Manually perform a Transmission Control Protocol handshake
  - id: level-12
    name: level12
    description: Manually send an Address Resolution Protocol packet
  - id: level-13
    name: level13
    description: Hijack traffic from a remote host using ARP
  - id: level-14
    name: level14
    description: Man-in-the-middle traffic between two remote hosts and inject extra traffic
  resources:
  - name: "Intercepting Communication: Introduction"
    type: lecture
    video: TLJHimgblCM
    playlist: PL-ymxv0nOtqrrjUFj5DL7jby9xA4sPFq-
    slides: 1fj5anIxRY3haHl81dFWwwCMQhJCUEY-NrTClwYH9_iE
  - name: "Intercepting Communication: Ethernet"
    type: lecture
    video: TaPsmkBNJ64
    playlist: PL-ymxv0nOtqrrjUFj5DL7jby9xA4sPFq-
    slides: 1OFdRsadX7HaLVtrVC5rV8837W8FY83Qzca5OIhhade0
  - name: "Intercepting Communication: Internet Protocol"
    type: lecture
    video: _3F7lRUoIXM
    playlist: PL-ymxv0nOtqrrjUFj5DL7jby9xA4sPFq-
    slides: 1fiTAFWX-ASikEFD1QRmgangaUzLvE2Ym7UlSjVnx4Oc
  - name: "Intercepting Communication: Transmission Control Protocol"
    type: lecture
    video: v3m9F9nEpCA
    playlist: PL-ymxv0nOtqrrjUFj5DL7jby9xA4sPFq-
    slides: 1ALXCLKkbGgzOJ0qrCGD-UekGOGjzH74tLAaZLw4CvWc
  - name: "Intercepting Communication: Address Resolution Protocol"
    type: lecture
    video: 9p2OU4r4aGs
    playlist: PL-ymxv0nOtqrrjUFj5DL7jby9xA4sPFq-
    slides: 1VoEUlgjCNZuNIdh8KSxF6bTXPr1ylaeokwFDOLk7F94
  - name: "Tooling Documentation"
    type: markdown
    content: |
      - [man page: `nc`](https://linux.die.net/man/1/nc)
      - [man page: `ip`](https://linux.die.net/man/8/ip)
      - [man page: `tcpdump`](https://linux.die.net/man/8/tcpdump)
      - [Cheat Sheet For `ip` Command](https://access.redhat.com/sites/default/files/attachments/rh_ip_command_cheatsheet_1214_jcs_print.pdf)
      - [Wireshark User's Guide](https://www.wireshark.org/docs/wsug_html_chunked/)
      - [Scapy's Documentation](https://scapy.readthedocs.io/en/latest/)

- id: cryptography
  name: Cryptography
  description: Solve various cryptography challenges ranging from decoding base64 data to performing a simplified TLS handshake.
  challenges:
  - id: level-1
    name: level1
    description: Decode base64-encoded data
  - id: level-2
    name: level2
    description: Decrypt a secret encrypted with a one-time pad, assuming a securely transferred key
  - id: level-3
    name: level3
    description: Decrypt a secret encrypted with a one-time pad, where the key is reused for arbitrary data
  - id: level-4
    name: level4
    description: Decrypt a secret encrypted with AES using the ECB mode of operation
  - id: level-5
    name: level5
    description: Decrypt a secret encrypted with AES-ECB, where arbitrary data is appended to the secret and the key is reused
  - id: level-6
    name: level6
    description: Perform a Diffie-Hellman key exchange to establish a shared secret
  - id: level-7
    name: level7
    description: Decrypt an RSA-encrypted secret using provided public and private keys
  - id: level-8
    name: level8
    description: Decrypt an RSA-encrypted secret using the provided prime factors of n
  - id: level-9
    name: level9
    description: Find a small hash collision using SHA256, considering only the first 2 bytes
  - id: level-10
    name: level10
    description: Compute a small proof-of-work by appending response data to the challenge data, resulting in a SHA256 hash with 2 null-bytes
  - id: level-11
    name: level11
    description: Complete an RSA challenge-response using provided public and private keys
  - id: level-12
    name: level12
    description: Complete an RSA challenge-response by providing the public key
  - id: level-13
    name: level13
    description: Sign a user certificate using a provided self-signed root certificate and root private key
  - id: level-14
    name: level14
    description: Perform a simplified TLS handshake as the server, completing a Diffie-Hellman key exchange and establishing an encrypted channel to provide a user certificate and prove private key ownership
  resources:
  - name: "Cryptography: Introduction"
    type: lecture
    video: YBdzIxeseuE
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 16lg_XvODz-gebGMTsUDF4u2ueQwwGM6r6-hDfz1lW_E
  - name: "Cryptography: Symmetric Encryption"
    type: lecture
    video: CJrCzOR2qhk
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 1RzVGK4JXM4Iia5IA8N_Hu0Rshd1VedOvo-0a54qkceU
  - name: "Cryptography: Key Exchange"
    type: lecture
    video: YSipKal5SKM
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 1BSCUh-Y8FyMthjngBTrMCBdvfwkkn8KfxgYun2328kI
  - name: "Cryptography: Asymmetric Encryption"
    type: lecture
    video: 661MFqOp0WA
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 1oOF6fWzLX-g4CpMQ2VpPOD4k3TYtAxVvVuY8BPZF2oI
  - name: "Cryptography: Hashing"
    type: lecture
    video: BY5qBsmWEa8
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 1_DJHHllHplxalW8DCgR-BPF9D_PJxoozxbLzrVYCe18
  - name: "Cryptography: Trust"
    type: lecture
    video: -QLq_8ZbUzw
    playlist: PL-ymxv0nOtqpBYQKnbivatYlfQ3Ygf63_
    slides: 1OER4qdFD4JjxaAhMr9axcIUk4-oNskl7LwRC7LXtqnU

- id: web-security
  name: Web Security
  description: Exploit various web security vulnerabilities.
  challenges:
  - id: level-1
    name: level1
    description: Exploit a path traversal vulnerability
  - id: level-2
    name: level2
    description: Exploit a command injection vulnerability
  - id: level-3
    name: level3
    description: Exploit an authentication bypass vulnerability 
  - id: level-4
    name: level4
    description: Exploit a structured query language injection vulnerability to login
  - id: level-5
    name: level5
    description: Exploit a structured query language injection vulnerability to leak data
  - id: level-6
    name: level6
    description: Exploit a structured query language injection vulnerability with an unknown database structure
  - id: level-7
    name: level7
    description: Exploit a structured query language injection vulnerability to blindly leak data
  - id: level-8
    name: level8
    description: Exploit a cross site scripting vulnerability
  - id: level-9
    name: level9
    description: Exploit a cross site scripting vulnerability with more complicated context
  - id: level-10
    name: level10
    description: Exploit a cross site scripting vulnerability to cause a user action
  - id: level-11
    name: level11
    description: Exploit a cross site request forgery vulnerability
  - id: level-12
    name: level12
    description: Exploit a cross site request forgery vulnerability where the request must POST
  - id: level-13
    name: level13
    description: Exploit a cross site scripting vulnerability to exfilitrate user session data 
  - id: level-14
    name: level14
    description: Exploit a cross site scripting vulnerability to exfilitrate user data
  - id: level-15
    name: level15
    description: Exploit a (memory corruption) stack injection vulnerability
  resources:
  - name: "Web Security: Introduction"
    type: lecture
    video: AKTYVWCi6ss
    playlist: PL-ymxv0nOtqrvXLSALV5SQ5v3oyKY4DWg
    slides: 1ATO_U0aUlk2LRhlnIwdqTkDfu-lWRb5xoLDv0NQLPs8
  - name: "Web Security: Structured Query Language"
    type: lecture
    video: 433mRGcpHeA
    playlist: PL-ymxv0nOtqrvXLSALV5SQ5v3oyKY4DWg
    slides: 1KpvjoFnlC9HcUJbkg-_VASf2JETMwEZjpzO0uGSoCo4
  - name: "Web Security: Injection"
    type: lecture
    video: sdStLx3_Q0M
    playlist: PL-ymxv0nOtqrvXLSALV5SQ5v3oyKY4DWg
    slides: 1rP8IIc_6B8Z7KpqBGxkneIzAjURRQ-YlkJV-_4dF-SM
  - name: "Web Security: Same-Origin Policy"
    type: lecture
    video: b1NOCHm4t_s
    playlist: PL-ymxv0nOtqrvXLSALV5SQ5v3oyKY4DWg
    slides: 1KkiR8B_9xQilW_yq6W9FZ6xBN78V0S1aH1XvQfufYIk
  - name: "Tooling Documentation"
    type: markdown
    content: |
      - [python -m http.server](https://docs.python.org/library/http.server.html)
      - [JavaScript Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)
